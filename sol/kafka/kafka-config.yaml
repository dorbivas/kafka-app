replicaCount: 3

kafka:
  configuration: |-
    # Listeners
    listeners=CONTROLLER://:9093,SASL_PLAINTEXT://:9092
    advertised.listeners=SASL_PLAINTEXT://localhost:9092
    listener.security.protocol.map=CONTROLLER:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
    inter.broker.listener.name=SASL_PLAINTEXT

    # Kraft mode configurations
    process.roles=broker,controller
    controller.quorum.voters=0@localhost:9093
    node.id=0
    log.dirs=/bitnami/kafka/data

    # # SASL configurations
    # sasl.enabled.mechanisms=SCRAM-SHA-256
    # sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
    # listener.name.sasl_plaintext.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka" password="kafka";
    # listener.name.controller.plain.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka" password="kafka";

  # auth:
  #   clientProtocol: sasl
  #   interBrokerProtocol: sasl
  #   saslMechanisms:
  #     - SCRAM-SHA-256
  #   existingSecret: kafka-secret
  #   jaasConfig:
  #     clientUsers: kafka
  #     clientPasswords: kafka
  #     interBrokerUser: kafka
  #     interBrokerPassword: kafka

metrics:
  kafka:
    jmx:
      enabled: false
  jmx:
    enabled: false
    export: false
    resources: {}
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
      type: ClusterIP
      port: 5556
    serviceMonitor:
      enabled: false
      namespace: monitoring
      additionalLabels: {}
      interval: 10s
      scrapeTimeout: 10s
      relabelings: []
      metricRelabelings: []

resources:
  limits: {}
  requests: {}

volumePermissions:
  enabled: false

sidecars: []
initContainers: []

updateStrategy: RollingUpdate
podAnnotations: {}

persistence:
  enabled: true
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 8Gi

# externalAccess:
#   enabled: false
#   service:
#     type: LoadBalancer
#     port: 19092
#     loadBalancerIP: ""
#   autoDiscovery:
#     enabled: true

serviceAccount:
  create: true
  name: ""

rbac:
  create: true
  rules: []

# podDisruptionBudget:
#   create: false
#   minAvailable: 1
#   maxUnavailable: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPU: 50
  targetMemory: 50

# podAffinityPreset: ""
# podAntiAffinityPreset: ""
# nodeAffinityPreset:
#   type: ""
#   key: ""
#   values: []
# affinity: {}
# nodeSelector: {}
# tolerations: []

livenessProbe:
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# customLivenessProbe: {}
# customReadinessProbe: {}
